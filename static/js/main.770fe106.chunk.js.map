{"version":3,"sources":["components/header.tsx","components/tile.tsx","components/board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Tile","props","onClick","ev","row","col","className","num","Board","useState","arr","Array","from","length","v","i","w","j","board","setBoard","OnTilePressed","r","c","value","console","log","res","map","x","index","MoveLeft","MoveRight","MoveUp","MoveDown","style","gridTemplateColumns","tabIndex","element","n","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.770fe106.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header>\r\n      <h1>Sloyd</h1>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Tile(props: {\r\n  num: number;\r\n  row: number;\r\n  col: number;\r\n  ev: (r: number, c: number) => void;\r\n}) {\r\n  let func = () => {\r\n    props.ev(props.row, props.col);\r\n  };\r\n  return <div onClick={func} className={\"tile\" + (props.num === 0 ? \" hole\" : \"\")}>{props.num}</div>;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Tile from \"./tile\";\r\n\r\nexport default function Board(props: { row: number; col: number }) {\r\n  const [board, setBoard] = useState(() => {\r\n    let arr = Array.from({ length: props.row }, (v, i) =>\r\n      Array.from({ length: props.col }, (w, j) => i * props.col + j + 1)\r\n    );\r\n    arr[props.row - 1][props.col - 1] = 0;\r\n    return { arr, row: props.row - 1, col: props.col - 1 };\r\n  });\r\n\r\n  const MoveLeft = (value: number) => {\r\n    console.log(board.arr);\r\n    if (value < 1 || board.col === props.col - 1) {\r\n      return;\r\n    }\r\n    let res = board.arr.map((x) => [...x]);\r\n    for (let index = 0; index < value; index++) {\r\n      res[board.row][board.col + index] = res[board.row][board.col + index + 1];\r\n    }\r\n    res[board.row][board.col + value] = 0;\r\n\r\n    setBoard({ arr: res, col: board.col + value, row: board.row });\r\n  };\r\n\r\n  const MoveRight = (value: number) => {\r\n    console.log(board.arr);\r\n    if (value < 1 || board.col === 0) {\r\n      return;\r\n    }\r\n\r\n    let res = board.arr.map((x) => [...x]);\r\n    for (let index = 0; index < value; index++) {\r\n      res[board.row][board.col - index] = res[board.row][board.col - index - 1];\r\n    }\r\n    res[board.row][board.col - value] = 0;\r\n\r\n    setBoard({ arr: res, col: board.col - value, row: board.row });\r\n  };\r\n\r\n  const MoveUp = (value: number) => {\r\n    console.log(board.arr);\r\n    if (value < 1 || board.row === props.row - 1) {\r\n      return;\r\n    }\r\n    let res = board.arr.map((x) => [...x]);\r\n    for (let index = 0; index < value; index++) {\r\n      res[board.row + index][board.col] = res[board.row + index + 1][board.col];\r\n    }\r\n    res[board.row + value][board.col] = 0;\r\n\r\n    setBoard({ arr: res, col: board.col, row: board.row + value });\r\n  };\r\n\r\n  const MoveDown = (value: number) => {\r\n    console.log(board.arr);\r\n    if (value < 1 || board.row === 0) {\r\n      return;\r\n    }\r\n    let res = board.arr.map((x) => [...x]);\r\n    for (let index = 0; index < value; index++) {\r\n      res[board.row - index][board.col] = res[board.row - index - 1][board.col];\r\n    }\r\n    res[board.row - value][board.col] = 0;\r\n\r\n    setBoard({ arr: res, col: board.col, row: board.row - value });\r\n  };\r\n\r\n  // EVENT\r\n  const OnTilePressed = (r: number, c: number) => {\r\n    if (r == board.row) {\r\n      if (c > board.col) {\r\n        MoveLeft(c - board.col);\r\n      } else {\r\n        MoveRight(board.col - c);\r\n      }\r\n    } else if (c == board.col) {\r\n      if (r > board.row) {\r\n        MoveUp(r - board.row);\r\n      } else {\r\n        MoveDown(board.row - r);\r\n      }\r\n    }\r\n  };\r\n\r\n  // KEYBOARD INPUT\r\n//   const OnKeyDown = (ev: KeyboardEvent) => {\r\n//     console.log(ev.key);\r\n\r\n//     if (ev.key === \"ArrowLeft\") {\r\n//       MoveLeft(1);\r\n//     } else if (ev.key === \"ArrowRight\") {\r\n//       MoveRight(1);\r\n//     }\r\n//   };\r\n//   useEffect(() => {\r\n//     document.addEventListener(\"keydown\", OnKeyDown);\r\n//     return () => {\r\n//       document.removeEventListener(\"keydown\", OnKeyDown);\r\n//     };\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     console.log(board.arr);\r\n//   });\r\n\r\n  return (\r\n    <div\r\n      className=\"board\"\r\n      style={{ gridTemplateColumns: `repeat(${props.col}, auto)` }}\r\n      tabIndex={0}\r\n    >\r\n      {board.arr.map((element, i) =>\r\n        element.map((n, j) => (\r\n          <Tile num={n} row={i} col={j} ev={OnTilePressed} key={i + \"-\" + j} />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Header from \"./components/header\";\nimport Board from \"./components/board\"\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Board row={3} col={3} />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}